import { e as sendAction, f as formatProperties, E as Event, a as EVENT_TYPES, g as sendDeselection, T as TELEMETRY_ACTIONS } from './feature-f06192da.js';
import { u as updateElementEndpoint, i as insertElementEndpoint, r as removeElementEndpoint } from './browser-0ec08580.js';
import 'http';
import 'https';
import 'url';
import 'stream';
import 'assert';
import 'zlib';

class PromotionCard {
    _promoted;
    get id() {
        return 'PromotionCard';
    }
    initPromoted(promoted) {
        this._promoted = promoted;
    }
    sendAction(adid, clickType) {
        const action = TELEMETRY_ACTIONS[clickType];
        action && sendAction(adid, action);
    }
    show(feature) {
        if (!this._promoted) {
            throw new Error('It needs to initPromoted.');
        }
        const properties = formatProperties(feature.properties);
        const card = document.querySelector('.mapboxgl-card');
        const adidClass = `mapboxgl-card-adid__${feature.properties.adid}`;
        const adidCard = document.querySelector(`.${adidClass}`);
        // when if same promotion icon was clicked, it deletes current promotion card.
        if (card && adidCard) {
            return;
        }
        // when if another promotion icon was clicked, it updates promotion card.
        if (card && !adidCard && updatePromotionCard) {
            this._promoted.fire(new Event(EVENT_TYPES.UPDATE_CARD, { feature }));
            updateElementEndpoint('.mapboxgl-card', `mapboxgl-card ${adidClass}`);
            updatePromotionCard(properties);
            return;
        }
        this._promoted.fire(new Event(EVENT_TYPES.SHOW_CARD, { feature }));
        insertElementEndpoint(`mapboxgl-card ${adidClass}`);
        showPromotionCard && showPromotionCard(properties, (clickType, adid) => {
            if (!this._promoted) {
                return;
            }
            this._promoted.fire(new Event(EVENT_TYPES.CLICK_CARD, { clickType, feature }));
            this.sendAction(adid, clickType);
        }, (adid) => {
            if (!this._promoted) {
                return;
            }
            this._promoted.fire(new Event(EVENT_TYPES.CLOSE_CARD, { feature }));
            this._promoted.deselectLayer();
            this.remove();
            sendDeselection(adid);
        });
    }
    remove() {
        removeElementEndpoint('.mapboxgl-card');
    }
}

export { PromotionCard as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvbW90aW9uQ2FyZC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvcmUvcHJvbW90aW9uQ2FyZC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmb3JtYXRQcm9wZXJ0aWVzIH0gZnJvbSAndXRpbHMvZmVhdHVyZSc7XG5pbXBvcnQge1xuICBpbnNlcnRFbGVtZW50RW5kcG9pbnQsXG4gIHVwZGF0ZUVsZW1lbnRFbmRwb2ludCxcbiAgcmVtb3ZlRWxlbWVudEVuZHBvaW50LFxufSBmcm9tICd1dGlscy9icm93c2VyJztcbmltcG9ydCB7IEV2ZW50IH0gZnJvbSAnLi9ldmVudCc7XG5pbXBvcnQgeyBFVkVOVF9UWVBFUywgVEVMRU1FVFJZX0FDVElPTlMgfSBmcm9tICcuL2hlbHBlcnMnO1xuXG5pbXBvcnQgKiBhcyB0ZWxlbWV0cnlBUElzIGZyb20gJ2FwaXMvdGVsZW1ldHJ5JztcblxuY2xhc3MgUHJvbW90aW9uQ2FyZCB7XG4gIHByaXZhdGUgX3Byb21vdGVkPzogTWFwYm94UHJvbW90ZWQ7XG5cbiAgcHVibGljIGdldCBpZCgpIHtcbiAgICByZXR1cm4gJ1Byb21vdGlvbkNhcmQnO1xuICB9XG5cbiAgcHVibGljIGluaXRQcm9tb3RlZChwcm9tb3RlZDogTWFwYm94UHJvbW90ZWQpIHtcbiAgICB0aGlzLl9wcm9tb3RlZCA9IHByb21vdGVkO1xuICB9XG5cbiAgcHJpdmF0ZSBzZW5kQWN0aW9uKGFkaWQ6IHN0cmluZywgY2xpY2tUeXBlOiBQcm9tb3Rpb25DYXJkLkNsaWNrVHlwZXMpIHtcbiAgICBjb25zdCBhY3Rpb24gPSBURUxFTUVUUllfQUNUSU9OU1tjbGlja1R5cGVdO1xuICAgIGFjdGlvbiAmJiB0ZWxlbWV0cnlBUElzLnNlbmRBY3Rpb24oYWRpZCwgYWN0aW9uIGFzIFRlbGVtZXRyeUFQSS5BY3Rpb25zKTtcbiAgfVxuXG4gIHB1YmxpYyBzaG93KGZlYXR1cmU6IEZlYXR1cmUpIHtcbiAgICBpZiAoIXRoaXMuX3Byb21vdGVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0l0IG5lZWRzIHRvIGluaXRQcm9tb3RlZC4nKTtcbiAgICB9XG5cbiAgICBjb25zdCBwcm9wZXJ0aWVzID0gZm9ybWF0UHJvcGVydGllcyhmZWF0dXJlLnByb3BlcnRpZXMpO1xuICAgIGNvbnN0IGNhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWFwYm94Z2wtY2FyZCcpO1xuICAgIGNvbnN0IGFkaWRDbGFzcyA9IGBtYXBib3hnbC1jYXJkLWFkaWRfXyR7ZmVhdHVyZS5wcm9wZXJ0aWVzLmFkaWR9YDtcbiAgICBjb25zdCBhZGlkQ2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2FkaWRDbGFzc31gKTtcblxuICAgIC8vIHdoZW4gaWYgc2FtZSBwcm9tb3Rpb24gaWNvbiB3YXMgY2xpY2tlZCwgaXQgZGVsZXRlcyBjdXJyZW50IHByb21vdGlvbiBjYXJkLlxuICAgIGlmIChjYXJkICYmIGFkaWRDYXJkKSB7IHJldHVybjsgfVxuICAgIC8vIHdoZW4gaWYgYW5vdGhlciBwcm9tb3Rpb24gaWNvbiB3YXMgY2xpY2tlZCwgaXQgdXBkYXRlcyBwcm9tb3Rpb24gY2FyZC5cbiAgICBpZiAoY2FyZCAmJiAhYWRpZENhcmQgJiYgdXBkYXRlUHJvbW90aW9uQ2FyZCkge1xuICAgICAgdGhpcy5fcHJvbW90ZWQuZmlyZShuZXcgRXZlbnQoRVZFTlRfVFlQRVMuVVBEQVRFX0NBUkQsIHsgZmVhdHVyZSB9KSk7XG4gICAgICB1cGRhdGVFbGVtZW50RW5kcG9pbnQoJy5tYXBib3hnbC1jYXJkJywgYG1hcGJveGdsLWNhcmQgJHthZGlkQ2xhc3N9YCk7XG4gICAgICB1cGRhdGVQcm9tb3Rpb25DYXJkKHByb3BlcnRpZXMpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuX3Byb21vdGVkLmZpcmUobmV3IEV2ZW50KEVWRU5UX1RZUEVTLlNIT1dfQ0FSRCwgeyBmZWF0dXJlIH0pKTtcbiAgICBpbnNlcnRFbGVtZW50RW5kcG9pbnQoYG1hcGJveGdsLWNhcmQgJHthZGlkQ2xhc3N9YCk7XG4gICAgXG4gICAgc2hvd1Byb21vdGlvbkNhcmQgJiYgc2hvd1Byb21vdGlvbkNhcmQoXG4gICAgICBwcm9wZXJ0aWVzLFxuICAgICAgKGNsaWNrVHlwZTogUHJvbW90aW9uQ2FyZC5DbGlja1R5cGVzLCBhZGlkOiBzdHJpbmcpID0+IHtcbiAgICAgICAgaWYgKCF0aGlzLl9wcm9tb3RlZCkgeyByZXR1cm47IH1cbiAgICAgICAgdGhpcy5fcHJvbW90ZWQuZmlyZShuZXcgRXZlbnQoRVZFTlRfVFlQRVMuQ0xJQ0tfQ0FSRCwgeyBjbGlja1R5cGUsIGZlYXR1cmUgfSkpO1xuICAgICAgICB0aGlzLnNlbmRBY3Rpb24oYWRpZCwgY2xpY2tUeXBlKTsgXG4gICAgICB9LFxuICAgICAgKGFkaWQ6IHN0cmluZykgPT4ge1xuICAgICAgICBpZiAoIXRoaXMuX3Byb21vdGVkKSB7IHJldHVybjsgfVxuICAgICAgICB0aGlzLl9wcm9tb3RlZC5maXJlKG5ldyBFdmVudChFVkVOVF9UWVBFUy5DTE9TRV9DQVJELCB7IGZlYXR1cmUgfSkpO1xuICAgICAgICB0aGlzLl9wcm9tb3RlZC5kZXNlbGVjdExheWVyKCk7XG4gICAgICAgIHRoaXMucmVtb3ZlKCk7XG4gICAgICAgIHRlbGVtZXRyeUFQSXMuc2VuZERlc2VsZWN0aW9uKGFkaWQpO1xuICAgICAgfVxuICAgICk7XG4gIH1cblxuICBwcml2YXRlIHJlbW92ZSgpIHtcbiAgICByZW1vdmVFbGVtZW50RW5kcG9pbnQoJy5tYXBib3hnbC1jYXJkJyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUHJvbW90aW9uQ2FyZDtcbiJdLCJuYW1lcyI6WyJ0ZWxlbWV0cnlBUElzLnNlbmRBY3Rpb24iLCJ0ZWxlbWV0cnlBUElzLnNlbmREZXNlbGVjdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBV0EsTUFBTSxhQUFhO0lBQ1QsU0FBUyxDQUFrQjtJQUVuQyxJQUFXLEVBQUU7UUFDWCxPQUFPLGVBQWUsQ0FBQztL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
