"use strict";var e=require("axios"),t=require("date-fns");function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=n(e);const i={BASE_URL:"https://api.mapbox.com",TELEMETRY_URL:"https://events.mapbox.com",SOURCE_URL:"mapbox://mapbox-ads.bq09b9qc",LAYER_SOURCE_ID:"promoted-pins-8s73mu",ACCESS_TOKEN:"",MOBILE_MAX_WIDTH:768,DEBUG:!1};const a=(e=8)=>Math.random().toString(e).substring(2),o="Call",r="Navigation",c="Detail",d="BannerDetail";let _=new Date,p=a();const E=async()=>{(!_||t.differenceInSeconds(new Date,_)>60)&&(_=new Date,p=a(),await l())};function S(e){if(!i.DEBUG)return new Promise(((t,n)=>{const a=`/events/v2?access_token=${i.ACCESS_TOKEN}`;return((e={})=>{const{baseURL:t,isBlob:n}=e;return s.default.create({baseURL:t||i.BASE_URL,headers:{"Content-Type":"application/json"},timeout:3e4,responseType:n?"blob":"json"})})({baseURL:i.TELEMETRY_URL,isBlob:!0}).post(a,e).then((e=>{t(e.data)})).catch((e=>{console.error(e),n(e)}))}))}async function l(){return S([{sessionIdentifier:p,event:"adMetrics.sessionStart",bucket:"undefined",created:(new Date).toISOString()}])}const D={["banner"]:d,["phone"]:o,["directions"]:r,["detail"]:c};exports.EVENT_TYPES={LOAD:"load",MOVE:"move",CLICK_PIN:"click_pin",CLICK_CARD:"click_card",SHOW_CARD:"show_card",UPDATE_CARD:"update_card",CLOSE_CARD:"close_card",CLICK_SIDE_CARD:"click_side_card",SHOW_SIDE_CARD:"show_side_card",UPDATE_SIDE_CARD:"update_side_card",OPEN_SIDE_CARD:"open_side_card",HIDE_SIDE_CARD:"hide_side_card",CLOSE_SIDE_CARD:"close_side_card",CLICK_POPUP:"click_popup",SHOW_POPUP:"show_popup",CLOSE_POPUP:"close_popup"},exports.Event=class{type;data;constructor(e,t={}){this.type=e,this.data=t}},exports.TELEMETRY_ACTIONS=D,exports.config=i,exports.formatProperties=e=>(e=>{const t={};for(const n in e)e.hasOwnProperty(n)&&(t[n.replace(/(\_\w)/g,(e=>e[1].toUpperCase()))]=e[n]);return t})(e),exports.sendAction=async function(e,t){const n={sessionIdentifier:p,event:"adMetrics.callToAction",adid:e,action:t,created:(new Date).toISOString()};return await E(),S([n])},exports.sendDeselection=async function(e){const t={sessionIdentifier:p,event:"adMetrics.deselect",adid:e,created:(new Date).toISOString()};return await E(),S([t])},exports.sendSelection=async function(e,t){const n={sessionIdentifier:p,event:"adMetrics.select",adid:e,zoomLevel:t,created:(new Date).toISOString()};return await E(),S([n])},exports.sendVisibilities=async function(e){const t=e.map((({adid:e,visibleStartTime:t,visibleEndTime:n})=>({sessionIdentifier:p,event:"adMetrics.visible",adid:e,visibleStartTime:t,visibleEndTime:n,created:(new Date).toISOString()})));return await E(),S(t)},exports.sessionStart=l;
