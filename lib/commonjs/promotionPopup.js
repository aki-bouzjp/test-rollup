'use strict';

var mapboxGl = require('mapbox-gl');
var feature = require('./feature-54323509.js');
require('axios');
require('date-fns');

class PromotionPopup {
    _promoted;
    _popup;
    get id() {
        return 'PromotionPopup';
    }
    initPromoted(promoted) {
        this._promoted = promoted;
    }
    sendAction(adid, clickType) {
        const action = feature.TELEMETRY_ACTIONS[clickType];
        action && feature.sendAction(adid, action);
    }
    show(feature$1) {
        if (!this._promoted) {
            throw new Error('It needs to initPromoted.');
        }
        this.remove();
        const properties = feature.formatProperties(feature$1.properties);
        const coordinates = feature$1.geometry.coordinates.slice();
        const adidClass = `mapboxgl-popup-adid__${properties.adid}`;
        const popup = document.querySelector(`.${adidClass}`);
        if (popup) {
            return;
        }
        this._promoted.fire(new feature.Event(feature.EVENT_TYPES.SHOW_POPUP, { feature: feature$1 }));
        this._popup = new mapboxGl.Popup({
            closeOnClick: false,
            closeButton: false,
            className: adidClass,
        }).setLngLat(coordinates)
            .setHTML(`<div class="mapboxgl-popup-content-adid__${properties.adid}" />`)
            .addTo(this._promoted.map);
        showPromotionPopup && showPromotionPopup(properties, (clickType, adid) => {
            if (!this._promoted) {
                return;
            }
            this._promoted.fire(new feature.Event(feature.EVENT_TYPES.CLICK_POPUP, { clickType, feature: feature$1 }));
            this.sendAction(adid, clickType);
        }, (adid) => {
            if (!this._promoted) {
                return;
            }
            this._promoted.fire(new feature.Event(feature.EVENT_TYPES.CLOSE_POPUP, { feature: feature$1 }));
            this._promoted.deselectLayer();
            this.remove();
            feature.sendDeselection(adid);
        });
        this._promoted.selectPin(feature$1);
    }
    remove() {
        if (!this._popup) {
            return;
        }
        this._popup.remove.bind(this);
        this._popup = undefined;
    }
}

module.exports = PromotionPopup;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvbW90aW9uUG9wdXAuanMiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb3JlL3Byb21vdGlvblBvcHVwLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBvcHVwIH0gZnJvbSAnbWFwYm94LWdsJztcbmltcG9ydCB7IGZvcm1hdFByb3BlcnRpZXMgfSBmcm9tICd1dGlscy9mZWF0dXJlJztcbmltcG9ydCB7IEV2ZW50IH0gZnJvbSAnLi9ldmVudCc7XG5pbXBvcnQgeyBFVkVOVF9UWVBFUywgVEVMRU1FVFJZX0FDVElPTlMgfSBmcm9tICcuL2hlbHBlcnMnO1xuXG5pbXBvcnQgKiBhcyB0ZWxlbWV0cnlBUElzIGZyb20gJ2FwaXMvdGVsZW1ldHJ5JztcblxuY2xhc3MgUHJvbW90aW9uUG9wdXAge1xuICBwcml2YXRlIF9wcm9tb3RlZD86IE1hcGJveFByb21vdGVkO1xuICBwcml2YXRlIF9wb3B1cD86IFBvcHVwO1xuXG4gIHB1YmxpYyBnZXQgaWQoKSB7XG4gICAgcmV0dXJuICdQcm9tb3Rpb25Qb3B1cCc7XG4gIH1cblxuICBwdWJsaWMgaW5pdFByb21vdGVkKHByb21vdGVkOiBNYXBib3hQcm9tb3RlZCkge1xuICAgIHRoaXMuX3Byb21vdGVkID0gcHJvbW90ZWQ7XG4gIH1cblxuICBwcml2YXRlIHNlbmRBY3Rpb24oYWRpZDogc3RyaW5nLCBjbGlja1R5cGU6IFByb21vdGlvblBvcHVwLkNsaWNrVHlwZXMpIHtcbiAgICBjb25zdCBhY3Rpb24gPSBURUxFTUVUUllfQUNUSU9OU1tjbGlja1R5cGVdO1xuICAgIGFjdGlvbiAmJiB0ZWxlbWV0cnlBUElzLnNlbmRBY3Rpb24oYWRpZCwgYWN0aW9uIGFzIFRlbGVtZXRyeUFQSS5BY3Rpb25zKTtcbiAgfVxuXG4gIHB1YmxpYyBzaG93KGZlYXR1cmU6IEZlYXR1cmUpIHtcbiAgICBpZiAoIXRoaXMuX3Byb21vdGVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0l0IG5lZWRzIHRvIGluaXRQcm9tb3RlZC4nKTtcbiAgICB9XG5cbiAgICB0aGlzLnJlbW92ZSgpO1xuXG4gICAgY29uc3QgcHJvcGVydGllcyA9IGZvcm1hdFByb3BlcnRpZXMoZmVhdHVyZS5wcm9wZXJ0aWVzKTtcbiAgICBjb25zdCBjb29yZGluYXRlcyA9IChmZWF0dXJlLmdlb21ldHJ5IGFzIGFueSkuY29vcmRpbmF0ZXMuc2xpY2UoKTtcbiAgICBjb25zdCBhZGlkQ2xhc3MgPSBgbWFwYm94Z2wtcG9wdXAtYWRpZF9fJHtwcm9wZXJ0aWVzLmFkaWR9YDtcbiAgICBjb25zdCBwb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2FkaWRDbGFzc31gKTtcbiAgICBpZiAocG9wdXApIHsgcmV0dXJuOyB9XG5cbiAgICB0aGlzLl9wcm9tb3RlZC5maXJlKG5ldyBFdmVudChFVkVOVF9UWVBFUy5TSE9XX1BPUFVQLCB7IGZlYXR1cmUgfSkpO1xuXG4gICAgdGhpcy5fcG9wdXAgPSBuZXcgUG9wdXAoe1xuICAgICAgY2xvc2VPbkNsaWNrOiBmYWxzZSxcbiAgICAgIGNsb3NlQnV0dG9uOiBmYWxzZSxcbiAgICAgIGNsYXNzTmFtZTogYWRpZENsYXNzLFxuICAgIH0pLnNldExuZ0xhdChjb29yZGluYXRlcylcbiAgICAgIC5zZXRIVE1MKGA8ZGl2IGNsYXNzPVwibWFwYm94Z2wtcG9wdXAtY29udGVudC1hZGlkX18ke3Byb3BlcnRpZXMuYWRpZH1cIiAvPmApXG4gICAgICAuYWRkVG8odGhpcy5fcHJvbW90ZWQubWFwKTtcblxuICAgIHNob3dQcm9tb3Rpb25Qb3B1cCAmJiBzaG93UHJvbW90aW9uUG9wdXAoXG4gICAgICBwcm9wZXJ0aWVzLFxuICAgICAgKGNsaWNrVHlwZTogUHJvbW90aW9uUG9wdXAuQ2xpY2tUeXBlcywgYWRpZDogc3RyaW5nKSA9PiB7XG4gICAgICAgIGlmICghdGhpcy5fcHJvbW90ZWQpIHsgcmV0dXJuOyB9XG4gICAgICAgIHRoaXMuX3Byb21vdGVkLmZpcmUobmV3IEV2ZW50KEVWRU5UX1RZUEVTLkNMSUNLX1BPUFVQLCB7IGNsaWNrVHlwZSwgZmVhdHVyZSB9KSk7XG4gICAgICAgIHRoaXMuc2VuZEFjdGlvbihhZGlkLCBjbGlja1R5cGUpOyBcbiAgICAgIH0sXG4gICAgICAoYWRpZDogc3RyaW5nKSA9PiB7XG4gICAgICAgIGlmICghdGhpcy5fcHJvbW90ZWQpIHsgcmV0dXJuOyB9XG4gICAgICAgIHRoaXMuX3Byb21vdGVkLmZpcmUobmV3IEV2ZW50KEVWRU5UX1RZUEVTLkNMT1NFX1BPUFVQLCB7IGZlYXR1cmUgfSkpO1xuICAgICAgICB0aGlzLl9wcm9tb3RlZC5kZXNlbGVjdExheWVyKCk7XG4gICAgICAgIHRoaXMucmVtb3ZlKCk7XG4gICAgICAgIHRlbGVtZXRyeUFQSXMuc2VuZERlc2VsZWN0aW9uKGFkaWQpO1xuICAgICAgfVxuICAgICk7XG4gICAgdGhpcy5fcHJvbW90ZWQuc2VsZWN0UGluKGZlYXR1cmUpO1xuICB9XG5cbiAgcHVibGljIHJlbW92ZSgpIHtcbiAgICBpZiAoIXRoaXMuX3BvcHVwKSB7IHJldHVybjsgfVxuICAgIHRoaXMuX3BvcHVwLnJlbW92ZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX3BvcHVwID0gdW5kZWZpbmVkO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFByb21vdGlvblBvcHVwO1xuIl0sIm5hbWVzIjpbIlRFTEVNRVRSWV9BQ1RJT05TIiwidGVsZW1ldHJ5QVBJcy5zZW5kQWN0aW9uIiwiZmVhdHVyZSIsImZvcm1hdFByb3BlcnRpZXMiLCJFdmVudCIsIkVWRU5UX1RZUEVTIiwiUG9wdXAiLCJ0ZWxlbWV0cnlBUElzLnNlbmREZXNlbGVjdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQU9BLE1BQU0sY0FBYztJQUNWLFNBQVMsQ0FBa0I7SUFDM0IsTUFBTSxDQUFTO0lBRXZCLElBQVcsRUFBRTtRQUNYLE9BQU8sZ0JBQWdCLENBQUM7S0FDekI7SUFFTSxZQUFZLENBQUMsUUFBd0I7UUFDMUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7S0FD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
